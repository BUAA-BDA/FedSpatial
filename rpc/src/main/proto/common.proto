syntax = "proto3";
package onedb;

option java_package = "com.hufudb.onedb.rpc";
option java_outer_classname = "OneDBCommon";

message Point {
  double lon = 1;
  double lat = 2;
}

message FieldProto {
  string name = 1;
  int32 type = 2;
}

message HeaderProto {
  repeated FieldProto field = 1;
}

message LocalTableInfoProto {
  string name = 1;
  HeaderProto header = 2;
}

message LocalTableListProto {
  repeated LocalTableInfoProto table = 1;
}

message RowsProto {
  repeated bytes row = 1;
}

message DataSetProto {
  HeaderProto header = 1;
  RowsProto rows = 2;
}

message ExpressionProto {
  int32 opType = 1;
  int32 outType = 2;
  repeated ExpressionProto in = 3;
  int32 func = 4;
  int32 level = 5;
  oneof value {
    string str = 6;
    bool b = 7;
    int32 i32 = 8;
    int64 i64 = 9;
    float f32 = 10;
    double f64 = 11;
    Point p = 12;
  }
}

message CollationProto {
  int32 ref = 1;
  int32 direction = 2;
}

message OwnerInfoProto {
  int32 id = 1;
  string endpoint = 2;
}

message JoinConditionProto {
  int32 type = 1;
  int32 level = 2;
  repeated int32 leftKey = 3;
  repeated int32 rightKey = 4;
  repeated ExpressionProto condition = 5;
}

message TaskInfoProto {
  int64 taskId = 1;
  int32 ptoId = 2;
  repeated int32 parties = 3;
}

// beta message
message SecureQueryProto {
  TaskInfoProto taskInfo = 1;
  oneof query {
    BinaryQueryProto binary = 2;
    UnaryQueryProto unary = 3;
    LeafQueryProto leaf = 4;
  }
  repeated SecureQueryProto children = 5;
}

message BinaryQueryProto {
  repeated ExpressionProto selectExp = 1;
  repeated ExpressionProto whereExp = 2;
  repeated ExpressionProto aggExp = 3;
  repeated int32 group = 4;
  repeated CollationProto order = 5;
  int32 fetch = 6;
  int32 offset = 7;
  JoinConditionProto joinInfo = 8;
}

message UnaryQueryProto {
  repeated ExpressionProto selectExp = 1;
  repeated ExpressionProto aggExp = 2;
  repeated int32 group = 3;
  repeated CollationProto order = 4;
  int32 fetch = 5;
  int32 offset = 6;
}

message LeafQueryProto {
  string tableName = 1;
  repeated ExpressionProto selectExp = 2;
  repeated ExpressionProto whereExp = 3;
  repeated ExpressionProto aggExp = 4;
  repeated int32 group = 5;
  repeated CollationProto order = 6;
  int32 fetch = 7;
  int32 offset = 8;
}