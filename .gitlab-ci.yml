image: "docker/compose:1.28.5"

services:
  - docker:dind

stages:
  - build
  - test
  - coverage

build:
  stage: build
  script:
    - cd docker/build
    - docker-compose up
  artifacts:
    paths:
      - release/
    expire_in: 20 minutes

test:
  stage: test
  needs: ["build"]
  dependencies:
    - build
  before_script:
    - cd docker/user
    - docker-compose down
    - cd ../owner
    - docker-compose down
    - cd ../database
    - docker-compose down
    - cd ../..
  script:
    - cd docker/database
    - docker-compose up -d
    - sleep 5
    - cd ../owner
    - cp -r ../cert/ci cert
    - docker-compose up -d
    - cd ../test
    - docker-compose up | grep "BUILD FAILED" && touch failed
    - if [ -e failed ]; then
        docker-compose logs
        docker-compose logs >> failed;
      fi
  after_script:
    - cd docker/test
    - docker-compose down
    - cd ../owner
    - docker-compose down
    - cd ../database
    - docker-compose down
    - cd ../test
    - if [ -e failed ]; then
        echo "Test failed";
        cat failed;
        rm failed;
        exit 1;
      fi
  artifacts:
    when: always
    reports:
      junit:
        - rpc/target/surefire-reports/TEST-*.xml
        - mpc/target/surefire-reports/TEST-*.xml
        - data/target/surefire-reports/TEST-*.xml
        - plan/target/surefire-reports/TEST-*.xml
        - plan/target/surefire-reports/TEST-*.xml
        - user/target/surefire-reports/TEST-*.xml
    paths:
      - target/site/jacoco-aggregate/jacoco.xml
    expire_in: 720 minutes

coverage:
  stage: coverage
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    - 'python /opt/cover2cover.py target/site/jacoco-aggregate/jacoco.xml 
              $CI_PROJECT_DIR/rpc/src/main/java/
              $CI_PROJECT_DIR/mpc/src/main/java/
              $CI_PROJECT_DIR/data/src/main/java/
              $CI_PROJECT_DIR/plan/src/main/java/
              $CI_PROJECT_DIR/owner/src/main/java/
              $CI_PROJECT_DIR/user/src/main/java/
              > target/site/coverage.xml'
  needs: ["test"]
  dependencies:
    - test
  artifacts:
    reports:
      cobertura: target/site/coverage.xml
